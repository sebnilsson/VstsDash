@model WorkStoriesViewModel
@{
    var isDashboard = Context.Request.IsDashboard();

    var requestQuery = Context.Request.Query;
    var projectId = requestQuery["projectId"];
    var teamId = requestQuery["teamId"];
    var iterationId = requestQuery["iterationId"];

    var dateText = $"{Model.FromDate:yyyy-MM-dd} - {Model.ToDate:yyyy-MM-dd}";

    const string topStatsCssClass = "border-white-1 rounded ml-1 mr-1 pl-2 pr-2";

    const string topStatsCssStyle = "flex-basis: 100px;";

    const int StoriesDoneTakeCount = 8;

    const int StoriesInProgressTakeCount = 8;
}

<div class="activity-container main-container @(!isDashboard ? "container" : "container-fluid")">
    <h1 class="h2">
        <icon value="@Icons.Stories"/>
        <strong>Stories</strong>@(!string.IsNullOrWhiteSpace(Model.IterationName) ? $": {Model.IterationName}" : null)

        @if (!isDashboard)
        {
            <a href="@Url.WorkStories(projectId, teamId, iterationId, true)"
               class="btn btn-outline-success btn-sm hidden-sm-down">
                <icon value="@Icons.Dashboard"/>
                Dashboard mode
            </a>
        }

        @if (!string.IsNullOrWhiteSpace(dateText))
        {
            <small>@dateText</small>
        }
    </h1>
</div>

<div class="activity-container main-container container">
    <div class="row">
        <div class="col-lg-6">
            <div class="card card-outline-primary">
                <h2 class="card-header h5 pl-2 pr-2 pt-1 pb-1">
                    Efforts
                </h2>

                <div class="card-block p-1">
                    <div class="d-flex flex-row justify-content-center text-center">
                        <stat value="@Model.EffortsTotal" description="Total"
                              class="@topStatsCssClass bg-faded"
                              style="@topStatsCssStyle"
                              is-inverse="true"
                              value-css="h4 mb-0"/>

                        <stat value="@Model.EffortsInProgress" description="In progress"
                              class="@topStatsCssClass bg-faded border-warning"
                              style="@topStatsCssStyle"
                              value-css="h4 mb-0"/>

                        <stat value="@Model.EffortsDone" description="Done"
                              class="@topStatsCssClass bg-faded border-success"
                              style="@topStatsCssStyle"
                              value-css="h4 mb-0"/>
                    </div>

                    @if (Model.EffortsTotal > 0)
                    {
                        <div class="card-block pl-1 pr-1 pt-0 pb-1">
                            <div class="progress mt-2">
                                <div class="progress-bar bg-success" role="progressbar"
                                     style="height: 24px; width: @(Model.EffortsDonePercent)%;">
                                    @if (!isDashboard && Model.EffortsDonePercent > 0)
                                    {
                                        @:@(Model.EffortsDonePercent)%
                                    }
                                </div>
                                <div class="progress-bar bg-warning" role="progressbar"
                                     style="height: 24px; width: @(Model.EffortsInProgressPercent)%;">
                                    @if (!isDashboard && Model.EffortsInProgressPercent > 0)
                                    {
                                        @:@(Model.EffortsInProgressPercent)%
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card card-outline-warning">
                <h2 class="card-header h5 pl-2 pr-2 pt-1 pb-1">
                    Capacity
                </h2>

                <div class="card-block p-1">
                    <div class="d-flex flex-row justify-content-center text-center">
                        <stat value="@(Model.CapacityTotal)h" description="Total"
                              class="@topStatsCssClass bg-faded"
                              style="@topStatsCssStyle"
                              is-inverse="true"
                              value-css="h4 mb-0"/>

                        <stat value="@(Model.CapacityRemaining)h" description="Remaining"
                              class="@topStatsCssClass bg-faded border-primary"
                              style="@topStatsCssStyle"
                              value-css="h4 mb-0"/>
                    </div>
                    @if (Model.CapacityTotal > 0)
                    {
                        <div class="card-block pl-1 pr-1 pt-0 pb-1">
                            <div class="progress mt-2">
                                <div class="progress-bar progress-bar-striped" role="progressbar"
                                     style="height: 24px; width: @(Model.CapacityRemainingPercent)%;">
                                    @if (!isDashboard && Model.CapacityRemainingPercent >= 0)
                                    {
                                        @:@(Model.CapacityRemainingPercent)%
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="card card-outline-success mt-2">
        <h2 class="card-header card-success text-white h4 pl-2 pr-2 pt-1 pb-1">
            <icon value="check" />
            Stories done

            @if (Model.StoriesDone.Any())
            {
                @:(@Model.StoriesDone.Count)
            }
        </h2>

        <div class="card-block p-2">
            @if (Model.StoriesDone.Any())
            {
                <div class="d-inline-flex flex-row flex-wrap align-items-stretch">
                    @foreach (var story in Model.StoriesDone.Take(StoriesDoneTakeCount))
                    {
                        @Html.Partial("Stories/_Story", story)
                    }
                </div>

                if (Model.StoriesDone.Count > StoriesDoneTakeCount)
                {
                    <div class="ml-2 mr-2 mt-1 text-center">
                        <div class="card card-outline-secondary col-lg-4 offset-lg-4 col-md-6 offset-md-3 col-sm-8 offset-sm-2">
                            <div class="card-block pl-2 pr-2 pt-0 pb-0">
                                ...
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <em>No stories done yet...</em>
            }
        </div>
    </div>

    <div class="card card-outline-warning mt-2">
        <h2 class="card-header card-warning text-white h4 pt-1 pb-1 pl-2 pr-2">
            <icon value="code" />
            Stories in progress

            @if (Model.StoriesInProgress.Any())
            {
                @:(@Model.StoriesInProgress.Count)
            }
        </h2>

        <div class="card-block bg-faded p-2">
            @if (Model.StoriesInProgress.Any())
            {
                <div class="d-flex d-inline-flex flex-wrap align-items-stretch">
                    @foreach (var story in Model.StoriesInProgress.Take(StoriesInProgressTakeCount))
                    {
                        @Html.Partial("Stories/_Story", story, new ViewDataDictionary(ViewData) {{"IsInProgress", true}})
                    }
                </div>

                if (Model.StoriesInProgress.Count > StoriesInProgressTakeCount)
                {
                    <div class="ml-2 mr-2 mt-1 bg-faded text-center">
                        <div class="card card-outline-secondary col-lg-4 offset-lg-4 col-md-6 offset-md-3 col-sm-8 offset-sm-2">
                            <div class="card-block pl-2 pr-2 pt-0 pb-0">
                                ...
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <em>No stories in progress yet...</em>
            }
        </div>
    </div>
</div>